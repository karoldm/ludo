/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package views;

/**
 *
 * @author Karol
 */
public class Rules extends javax.swing.JFrame {

    /**
     * Creates new form Rules
     */
    public Rules() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Regras");

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setText("Para se iniciar a partida, joga-se o dado e o participante que fizer o maior número de pontos inicia o jogo, \ncontinuando as jogadas em sentido horário.\nJoga-se com um dado e os avanços são feitos de acordo com os pontos obtidos com o lançamento\ndos dados.\nCada jogador lança o dado e se tirar “ 1” ou “6” poderá sair da casa de partida, sendo que, ao tirar\n“6” você tem o direito de jogar o dado novamente.\nPode ser jogado por 2, 3 ou 4 jogadores (no caso de 4, é possível formar 2 duplas). O tabuleiro\nquadrado tem um percurso em forma de cruz e cada jogador tem quatro peões. Um dado define os\nmovimentos.\nOs peões de cada jogador começam na base de mesma cor. O objetivo do jogo é ser o primeiro a\nlevar seus 4 peões a dar uma volta no tabuleiro e a chegar no ponto final marcado com sua cor. Os\npeões movem-se pelo percurso no sentido horário.\nPara transportar um peão de sua base para seu ponto de partida é necessário tirar 6. Quando o\njogador já tem pelo menos um peão no percurso, ele pode mover o peão do número de casas tirado\nno dado. Se tirar 6, além de usar esse resultado ele pode jogar novamente o dado.\nSe um jogador chegar a uma casa já ocupada por um peão adversário, o peão adversário deve\nvoltar para sua base. Mas se 2 peões da mesma cor ocuparem uma mesma casa, eles não podem\nser capturados e nenhum adversário pode passar por essa casa, tendo seus peões bloqueados.\nApós dar a volta no tabuleiro o peão avança pela reta final, de sua própria cor. A chegada ao ponto\nfinal só pode ser obtida por um número exato nos dados. Se o jogador tirar mais do que o\nnecessário, ele vai até o fim e volta, tendo que aguardar sua próxima jogada. O vencedor é o\nprimeiro a levar seus quatro peões ao ponto de chegada da sua cor. ");
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 601, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Rules.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Rules.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Rules.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Rules.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Rules().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
